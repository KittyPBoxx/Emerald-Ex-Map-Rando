var mixedGameData={};Object.entries(EMERALD_WARPS).forEach((e=>mixedGameData[e[0]]=e[1]));var remappingsData={},isHeadless=!0,warpList=new Map;function getMapData(){return mixedGameData}function getRandomisationAlgorithm(){return generateRandomMappings}function getRandomisationConfig(){let e={};return e.hoennLevel=document.getElementById("hoennLevel").value,e}function getFlagData(){return FLAG_DATA}function getEscapePaths(){return EMERALD_ESCAPE_PATHS}function mappingToWarps(e){let t=new Map;return e.forEach((e=>{let a=e.trigger,n=e.target.split(",");t.set(a,new PKWarp(a,n[0],n[1],n[2],n[3],e.source))})),t}async function mapWarps(e){flagsState={},unaddedConditionalEdges={};let t=getRandomisationConfig(),a=getFilteredData(),n=getFlagData(),A=getEscapePaths();remappingsData=getRandomisationAlgorithm().apply(null,[e,a,n,t,A]),warpList=mappingToWarps(getAugmetedRemappingData(remappingsData)),updateHashDisplay(),"undefined"!=typeof storageManager&&storageManager.persist("RANDOM_MAPPING",new WarpListData(e,t,warpList))}function generateRandomMappings(e,t,a,n,A){let i=new RNG(getHash(e)),s=initMappingGraph(t,isHeadless,new ProgressionState(a,n));s=generateEscapeWarps(A,t,i,s);var o=getInitialWarp(n);s.unconnectedComponents=s.unconnectedComponents.filter((e=>!e.includes(o)));for(var E=!0;E;){try{E=doNextMapping(i,o,s)}catch(e){console.error("An error occured mapping warps "+e),M.toast({html:"ERROR: Error assigning valid connections.<BR> Please try a different seed or config",displayLength:1e4}),E=!1}s=updateProgressionState(s,o)}return getBaseRemappingData()}function getInitialWarp(e){return KEY_LOCATION_DATA["OLDALE TOWN"]}function filterIgnored(e){return new Map([...e].filter((e=>!e[1].ignore)))}function filterByConfig(e,t){return e=new Map([...e].filter((a=>{let n=null;return"E"==a[0][0]?n=t.hoennLevel:"F"==a[0][0]?n=t.kantoLevel:"C"==a[0][0]&&(n=t.johtoLevel),e.get(a[0]).level&&+e.get(a[0]).level<=+n})))}function generateEscapeWarps(e,t,a,n){let A=new Set(t.keys()),i=e.map((e=>e.filter((e=>A.has(e))))).filter((e=>e.length>0)).flatMap((e=>e[a.nextRange(0,e.length-1)]));return n.randomMustLinkHomeWarps=i,n}function filteGroupedNotMain(e){return new Map([...e].filter((e=>e[1].groupMain||!e[1].grouped)))}function removeRemovableLocations(e){return new Map([...e].filter((e=>!(e[1].tags&&e[1].tags.includes("removeable")))))}function toMapBank(e){let t=e.split(",");return t[0]+","+t[1]+","+t[2]}function ProgressionState(e,t){this.remainingConditionalEdges=new Set,this.flags=new Set,this.flagData=e,this.config=t,this.unmarkedLocations=new Map(Object.entries(e.LOCATIONS_TRIGGER)),this.unmarkedFlags=new Map(Object.entries(e.COMPOSITE_FLAGS)),this.unmarkedKeyLocations=new Map(Object.entries(e.KEY_LOCATIONS))}function WarpListData(e,t,a){this.warpList=Array.from(a.entries()),this.seed=e,this.config=t}function exportMapping(){storageManager.find("RANDOM_MAPPING").then((e=>{let t=JSON.stringify(e),a=new File([t],"WarpMapping.json",{type:"application/json;charset=utf-8"});saveAs(a)}))}function importMapping(){let e=this.files[0],t=new FileReader;t.readAsText(e,"UTF-8"),t.onload=e=>{let t=e.target.result,a=JSON.parse(t);updateWarpListData(a),storageManager.persist("RANDOM_MAPPING",a)}}function updateWarpListData(e){document.getElementById("input_seed_text").value=e.seed,document.getElementById("hoennLevel").value=e.config.hoennLevel,M.FormSelect.getInstance(document.getElementById("hoennLevel"))._handleSelectChangeBound(),warpList=new Map(e.warpList),updateHashDisplay()}function updateHashDisplay(){document.getElementById("hashText").innerHTML="CHECK: "+Math.abs(getHash(JSON.stringify(Array.from(warpList)))).toString(16).toUpperCase()}function PKWarp(e,t,a,n,A,i){this.trigger=e,this.toRomCode=t,this.toBank=a,this.toMap=n,this.toWarpNo=A,this.source=i}function getHash(e){for(var t=0,a=e.length,n=0;n<a;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return t}function RNG(e){this.m=2147483648,this.a=1103515245,this.c=12345,this.state=e||Math.floor(Math.random()*(this.m-1))}function ReigonNode(e){this.data={},this.data.id=e,this.classes="reigon"}function AreaNode(e){this.data={},this.data.id=toMapBank(e[0]),this.data.isMap=!0,this.data.parent=toReigon(e[0]),this.data.label=e[0]+" ("+e[1].name.split("-")[0]+"- "+e[1].name.split("-")[1].trim()+")"}function WarpNode(e){this.data={},this.data.id=e[0],this.data.parent=toMapBank(e[0]),this.data.label=e[1].name?e[0]+e[1].name.split("-")[2]:e[0]+" (Unnamed)",this.classes="outline",this.data.isWarp=!0,this.data.isMapped=!1,this.data.needsReturn=e[1].tags&&e[1].tags.includes("needs_return"),this.data.noReturn=e[1].tags&&e[1].tags.includes("no_return"),this.data.hasMultipleConnections=!!e[1].connections&&Object.values(e[1].connections).filter((e=>1==e)).length>0}function FixedEdge(e,t){this.data={},this.data.id=e+"->"+t,this.data.source=e,this.data.target=t,this.classes="fixed"}function CondidtionalEdge(e,t,a){this.data={},this.data.id=e+"->"+t,this.data.source=e,this.data.target=t,this.classes="conditional",this.condition=a}function WarpEdge(e,t,a){this.data={},this.data.id=e+"->"+t+"#"+window.cy.getElementById(e+"->"+t).length,this.data.source=e,this.data.target=t,this.data.isWarp=!0,this.classes="warp"}function getAugmetedRemappingData(e){return e=addTriggerData(e=addGroupedMappings(e))}function addGroupedMappings(e){let t=[];return e.forEach((e=>{let a=getMapData()[e.source].grouped;a&&a.forEach((a=>{t.push({source:a,target:e.target})}))})),[...e,...t]}function addTriggerData(e){return e.map((e=>(e.trigger=getMapData()[e.source].to,e)))}function getBaseRemappingData(){return cy.edges().filter((e=>e.data().isWarp)).map((e=>({source:e.data().source,target:e.data().target})))}function getFilteredData(){let e=new Map(Object.entries(getMapData()));return e=filterIgnored(e),e=filteGroupedNotMain(e),e=filterByConfig(e,getRandomisationConfig()),e=removeRemovableLocations(e),e}function toReigon(e){return"HOENN"}function findAccessibleUnmappedNodes(e,t){let a=new Set;return e.elements().bfs({roots:e.getElementById(t),directed:!0,visit:(e,t,n,A,i)=>{e.data().isMapped||a.add(e)}}),a}function doNextMapping(e,t,a){let n=a.cachedNodes?a.cachedNodes:findAccessibleUnmappedNodes(window.cy,t),A=cy.nodes().not(n).filter((e=>e.data().isWarp&&!e.data().isMapped)),i=A.filter((e=>a.unmarkedLocations.has(e.data().id))),s=A.filter((e=>a.unmarkedLocations.has(e.data().id)));if(0==n.size&&0==A.length)return!1;if(0==n.size&&(i.length>0||s.length>0))return M.toast({html:"ERROR: At least 1 importaint location was detected to be inaccessible. <BR>It may be impossible to complete this seed <BR> Please try a different seed or config",displayLength:1e4}),!1;if(0==n.size)return console.warn("Had to leave some dead ends unimportant inaccessible"),M.toast({html:"WARNING: Some checks could not be completed<BR> This seed should still be possible but is not recommended",displayLength:1e4}),!1;if(a.randomMustLinkHomeWarps.length>0){let e=Array.from(n).filter((e=>!a.randomMustLinkHomeWarps.includes(e.data().id)));e.length>0?n=new Set(e):a.randomMustLinkHomeWarps=[]}let o=null,E=null,r=!1,d=A.filter((e=>e.degree(!0)>0));if(a.unconnectedComponents.length>0){o=0==(new RNG).nextRange(0,5)?[...n][0]:[...n][e.nextRange(0,n.size-1)],n.delete(o);let t=a.unconnectedComponents.flat(),A=t.filter((e=>!a.randomMustLinkHomeWarps.includes(e)));A.length>0?t=A:(console.warn("Clearing must link home warps even though some were not satisfied"),a.randomMustLinkHomeWarps=[]);let i=selectRandomWarp(e,t,o);E=cy.getElementById(i),a.unconnectedComponents=a.unconnectedComponents.filter((e=>!e.includes(i))),console.log("HUBS")}else if(a.randomMustLinkHomeWarps.length>0&&n.size>1){let A=cy.nodes().filter((e=>!e.data().isMapped&&a.randomMustLinkHomeWarps.includes(e.data().id)));A.length>0?o=[...A][e.nextRange(0,A.length-1)]:(o=[...n][e.nextRange(0,n.size-1)],console.warn("Clearing must link home warps even though some were not satisfied"),a.randomMustLinkHomeWarps=[]),n.delete(o);let i=null;if(a.homeEscapesList)i=a.homeEscapesList;else{let e=cy.elements().floydWarshall({directed:!0});a.homeEscapesList=Array.from(n).filter((a=>"Infinity"!=e.distance(cy.getElementById(t),a))),i=a.homeEscapesList,a.homeEscapesList.forEach((e=>{a.randomMustLinkHomeWarps.includes(e.data().id)&&a.randomMustLinkHomeWarps.splice(a.randomMustLinkHomeWarps.indexOf(e.data().id),1)}))}i=0==i.length?n:i,E=selectRandomWarp(e,i,o),n.delete(E),a.randomMustLinkHomeWarps.splice(a.randomMustLinkHomeWarps.indexOf(o.data().id),1),a.homeEscapesList=a.homeEscapesList.filter((e=>e.data().id!=E.data().id)),console.log("HOME LINKS")}else if(i.length>0)o=[...n][e.nextRange(0,n.size-1)],n.delete(o),E=selectRandomWarp(e,i,o),E.addClass("significant"),console.log("FLAGS");else if(d.length>0)o=[...n][e.nextRange(0,n.size-1)],n.delete(o),A=A.filter((e=>e.degree(!0)>0)),E=selectRandomWarp(e,A,o),console.log("MORE HUBS");else if(s.length>0)o=[...n][e.nextRange(0,n.size-1)],n.delete(o),E=selectRandomWarp(e,s,o),r=!0,n.delete(E),E.addClass("significant"),console.log("KEY LOCATIONS");else if(A.length>0)o=[...n][e.nextRange(0,n.size-1)],n.delete(o),E=selectRandomWarp(e,A,o),r=!0,n.delete(E),console.log("DEADENDS");else if(n.size>1)o=[...n][e.nextRange(0,n.size-1)],n.delete(o),E=selectRandomWarp(e,[...n],o),r=!0,n.delete(E),console.log("MORE CONNECTIONS");else{o=[...n][e.nextRange(0,n.size-1)],n.delete(o);let t=["E,24,83,0","E,26,10,0","E,26,55,0","E,24,98,0","E,24,72,0","E,25,43,11","E,25,42,0"][e.nextRange(0,6)];E=cy.add(new WarpNode([t,getMapData()[t]])),r=!0,n.delete(E)}if(!o){if(0!=n.size?(console.log("Some accessible nodes were left:"),n.forEach((e=>{console.log(e.data().id)}))):console.log("All accesible nodes mapped"),0!=A.size)return console.log("Some inaccessible nodes were left:"),A.forEach((e=>{console.log(e.data().id)})),E.data().isMapped=!0,!1;console.log("All inaccesible nodes mapped")}if(window.cy.add(new WarpEdge(o.data().id,E.data().id)),o!=E&&window.cy.add(new WarpEdge(E.data().id,o.data().id)),o.data().isMapped)throw new Error(o.data().id+" (warp1) is already mapped. We shouldn't be trying to remap it");if(E.data().isMapped)throw new Error(E.data().id+" (warp2) is already mapped. We shouldn't be trying to remap it");return o.data().isMapped=!0,E.data().isMapped=!0,!0}function selectRandomWarp(e,t,a){let n=a.data().needsReturn,A=a.data().noReturn;return n?t=t.filter((e=>"string"==typeof e?!cy.getElementById(e).data().noReturn:!e.data().noReturn)):A&&(t=t.filter((e=>"string"==typeof e?!cy.getElementById(e).data().needsReturn:!e.data().needsReturn))),0==t.length&&M.toast({html:"ERROR: Progression logic could not be verified.<BR> Please try a different seed",displayLength:5e3}),t[e.nextRange(0,t.length-1)]}function updateProgressionState(e,t){let a=new Set;cy.elements().bfs({roots:cy.getElementById(t),directed:!0,visit:(e,t,n,A,i)=>{a.add(e.data().id)}}),e.unmarkedLocations.forEach(((t,n)=>{a.has(n)&&(e.unmarkedLocations.delete(n),e.flags.add(t))})),e.unmarkedFlags.forEach((t=>{t.condition.every((t=>e.flags.has(t)))&&(e.flags.add(t.flag),e.unmarkedFlags.delete(t.flag))}));let n=e.remainingConditionalEdges;return n.forEach((t=>{e.flags.has(t.condition)&&(cy.getElementById(t.data.target).length>0&&cy.getElementById(t.data.source).length>0&&cy.add(t),n.delete(t))})),e}function initMappingGraph(e,t,a){var n=window.cy=cytoscape({container:t?null:document.getElementById("cy"),headless:t,styleEnabled:!t,boxSelectionEnabled:!1,textureOnViewport:!0,style:[{selector:"node",css:{content:"data(id)","text-valign":"center","text-halign":"center"}},{selector:":parent",css:{"text-valign":"top","text-halign":"center"},style:{shape:"roundrectangle"}},{selector:"edge",css:{"curve-style":"bezier","target-arrow-shape":"triangle"}},{selector:"node[label]",style:{label:"data(label)","text-valign":"bottom","text-halign":"center"}},{selector:".reigon",css:{"background-color":"#2f3138",color:"#C0C0C0","font-size":"5em","text-valign":"top"}},{selector:".map-E",css:{"background-color":"#262729",color:"#C0C0C0","font-size":"2em"}},{selector:".warp",css:{"line-color":"#f92411","curve-style":"straight-triangle"}},{selector:".conditional",css:{"line-color":"#1911f9"}},{selector:".fixed",css:{opacity:"0.5"}},{selector:".significant",css:{"background-color":"#FFD700",shape:"hexagon"}},{selector:".indoors",css:{"background-color":"#543d48"}},{selector:".faded",css:{opacity:.2,"line-color":"#24080c"}}],elements:{nodes:[],edges:[]}});n.add(new ReigonNode("HOENN"));let A=[...e];return A.forEach((e=>{n.getElementById(toMapBank(e[0])).length||n.add(new AreaNode(e)).addClass("map-"+e[0][0]),n.add(new WarpNode(e))})),A.forEach((e=>{let t=e[1].connections?e[1].connections:{};Object.entries(t).forEach((t=>{"string"==typeof t[1]?(a.remainingConditionalEdges.add(new CondidtionalEdge(e[0],t[0],t[1])),n.getElementById(t[0]).length>0&&n.add(new CondidtionalEdge(e[0],t[0],t[1]))):n.getElementById(t[0]).length>0&&n.add(new FixedEdge(e[0],t[0]))}))})),a.unconnectedComponents=n.elements().components().filter((e=>e.size()>1)).map((e=>e.toArray().filter((e=>"nodes"==e.group()&&e.data().isWarp&&e.data().hasMultipleConnections)).map((e=>e.data().id)))).filter((e=>e.length>0)),a.remainingConditionalEdges.forEach((e=>n.getElementById(e.data.id).remove())),n.nodes().forEach((function(e){e.css("width",80),e.css("height",80)})),t||n.layout({name:"preset",nodeDimensionsIncludeLabels:!0,positions:nodeToPosition}).run(),a.makeFinalLocationsKey(),a}function getHint(e){let t=new Map(Object.entries(getMapData())),a=warpList.get(t.get(e).to);if(!a)return"NOT PRESENT";let n=t.get(a.toRomCode+","+a.toBank+","+a.toMap+","+a.toWarpNo).name;return n.split("-")[0].trim()+" - "+n.split("-")[1].trim()}ProgressionState.prototype.makeFinalLocationsKey=function(e){let t=[];switch(this.config.hoennLevel){case"1":t.push(HINTABLE_LOCATIONS.ROXANNE);break;case"2":t.push(HINTABLE_LOCATIONS.BRAWLY);break;case"3":t.push(HINTABLE_LOCATIONS.WATTSON);break;case"4":t.push(HINTABLE_LOCATIONS.FLANNERY);break;case"5":t.push(HINTABLE_LOCATIONS.NORMAN);break;case"6":t.push(HINTABLE_LOCATIONS.WINONA);break;case"7":t.push(HINTABLE_LOCATIONS["TATE AND LIZA"]);break;case"8":t.push(HINTABLE_LOCATIONS.JUAN)}t.forEach((e=>{this.unmarkedLocations.has(e)&&(this.unmarkedKeyLocations.set(e,this.unmarkedLocations.get(e)),this.unmarkedLocations.delete(e))}))},RNG.prototype.nextInt=function(){return this.state=(this.a*this.state+this.c)%this.m,this.state},RNG.prototype.nextFloat=function(){return this.nextInt()/(this.m-1)},RNG.prototype.nextRange=function(e,t){var a=t-e,n=this.nextInt()/this.m;return Math.abs(e+Math.floor(n*a))},RNG.prototype.choice=function(e){return e[this.nextRange(0,e.length)]};var HINTABLE_LOCATIONS={ROXANNE:"E,11,3,0",BRAWLY:"E,3,3,0",WATTSON:"E,10,0,0",FLANNERY:"E,4,1,0",NORMAN:"E,8,1,0",WINONA:"E,12,1,0","TATE AND LIZA":"E,14,0,0",JUAN:"E,15,0,0",SIDNEY:"E,16,0,0",PHOEBE:"E,16,1,0",GLACIA:"E,16,2,0",DRAKE:"E,16,3,0",WALLACE:"E,16,4,0",STEVEN:"E,24,107,0"},PATH_FINDING_LOCATIONS={CUT:"E,11,11,0",FLASH:"E,24,7,0",ROCKSMASH:"E,10,2,0",STRENGTH:"E,24,4,0",WATERFALL:"E,0,7,2",HOHO:"E,26,75,0",LUGIA:"E,26,87,0",KYOGRE:"E,24,103,0",GRAUDON:"E,24,105,0",RAYQUAZA:"E,24,85,0","BIKE SHOP":"E,10,1,0","MAGMA EMBLEM":"E,24,22,1","STOREAGE KEY":"E,24,63,0","STONE OFFICE":"E,11,2,0","STEVEN LETTER":"E,24,10,0","WEATHER INSTITUTE F2":"E,32,1,0","WALLACE ORIGIN CAVE":"E,24,42,0","METEOR FALLS F1":"E,24,0,0",PETALBURG:"E,0,0,3",SLATEPORT:"E,0,1,0",MAUVILLE:"E,0,2,1",RUSTBORO:"E,0,3,3",FORTREE:"E,0,4,0",LILYCOVE:"E,0,5,2",MOSSDEEP:"E,0,6,2",SOOTOPOLIS:"E,0,7,0",DEWFORD:"E,0,11,1",LAVARIDGE:"E,0,12,3",FALLARBOR:"E,0,13,2",VERDANTURF:"E,0,14,2",PACIFIDLOG:"E,0,15,0",ROXANNE:"E,11,3,0",BRAWLY:"E,3,3,0",WATTSON:"E,10,0,0",FLANNERY:"E,4,1,0",NORMAN:"E,8,1,0",WINONA:"E,12,1,0","TATE AND LIZA":"E,14,0,0",JUAN:"E,15,0,0",SIDNEY:"E,16,0,0",PHOEBE:"E,16,1,0",GLACIA:"E,16,2,0",DRAKE:"E,16,3,0",WALLACE:"E,16,4,0",STEVEN:"E,24,107,0"},LOCATIONS_DISABLED_FLAGS={CUT:["HOENN_CUT"],FLASH:["HOENN_FLASH"],ROCKSMASH:["HOENN_ROCK_SMASH"],STRENGTH:["HOENN_STRENGTH"],WATERFALL:["HOENN_WATERFALL"],"BIKE SHOP":["BIKE"],"MAGMA EMBLEM":["MAGMA_EMBLEM"],"STOREAGE KEY":["STOREAGE_KEY"],"STONE OFFICE":["TALK_TO_STONE"],"STEVEN LETTER":["UNLOCK_SLATEPORT"],"WEATHER INSTITUTE F2":["WEATHER_INSTITUTE"],"WALLACE ORIGIN CAVE":["SPEAK_TO_WALLACE"],"METEOR FALLS F1":["MAGMA_METEOR_FALLS"],ROXANNE:["HOENN_CUT","HOENN_FLASH","HOENN_ROCK_SMASH","HOENN_STRENGTH","HOENN_SURF","HOENN_WATERFALL"],BRAWLY:["HOENN_FLASH","HOENN_ROCK_SMASH","HOENN_STRENGTH","HOENN_SURF","HOENN_WATERFALL"],WATTSON:["HOENN_ROCK_SMASH","HOENN_STRENGTH","HOENN_SURF","HOENN_WATERFALL"],FLANNERY:["HOENN_STRENGTH","HOENN_SURF","HOENN_WATERFALL"],NORMAN:["HOENN_SURF","HOENN_WATERFALL"],WINONA:["HOENN_WATERFALL"],"TATE AND LIZA":["HOENN_WATERFALL"],JUAN:["HOENN_WATERFALL"]};function flagWeight(e,t){if(e.data().isWarp)return 1;var a=getMapData()[e.data().source].connections[e.data().target];return!0===a?1:LOCATIONS_DISABLED_FLAGS[t]&&LOCATIONS_DISABLED_FLAGS[t].includes(a)?99999:100*Object.values(COMPOSITE_FLAGS).filter((e=>e.flag==a))[0].condition.length}function shortestPath(e){let t=cy.elements().floydWarshall({weight:t=>flagWeight(t,e),directed:!0}).path(cy.getElementById("E,0,10,2"),PATH_FINDING_LOCATIONS[e]?cy.getElementById(PATH_FINDING_LOCATIONS[e]):cy.getElementById(e)).map((e=>e.isNode()?Object.assign({},getMapData()[e.data().id]):e.data().isWarp?{name:e.data().id,type:"WARP"}:{name:e.data().id,type:"WALK",conditions:[getMapData()[e.data().source].connections[e.data().target]]})),a=[];for(i=t.length-1;i>=2;i--)"WALK"==t[i].type&&"WALK"==t[i-2].type&&(t[i].collapse=!0,t[i-1].collapse=!0,t[i-2].conditions=t[i-2].conditions.concat(t[i].conditions)),"WALK"==t[i].type&&(a=a.concat(t[i].conditions));return{route:t.filter((e=>!e.collapse)).map((e=>{if(e.type&&e.conditions){let t="("+Array.from(new Set(e.conditions.filter((e=>"string"==typeof e)))).join(",")+")";return"()"==t?e.type:e.type+t}return e.type?e.type:e.name})),flags:new Set(a.filter((e=>"string"==typeof e)))}}var MAP_SCALE=100,OUTSIDE_MAP_SCALE=30,INSIDE_MAP_SCALE=10,MAP_BANK_POSITION={"0,0":{x:16*MAP_SCALE,y:88*MAP_SCALE},"0,1":{x:72*MAP_SCALE,y:96*MAP_SCALE},"0,2":{x:72*MAP_SCALE,y:64*MAP_SCALE},"0,3":{x:8*MAP_SCALE,y:56*MAP_SCALE},"0,4":{x:104*MAP_SCALE,y:16*MAP_SCALE},"0,5":{x:152*MAP_SCALE,y:40*MAP_SCALE},"0,6":{x:200*MAP_SCALE,y:56*MAP_SCALE},"0,7":{x:176*MAP_SCALE,y:72*MAP_SCALE},"0,8":{x:224*MAP_SCALE,y:80*MAP_SCALE},"0,9":{x:40*MAP_SCALE,y:68*MAP_SCALE},"0,10":{x:40*MAP_SCALE,y:88*MAP_SCALE},"0,11":{x:24*MAP_SCALE,y:128*MAP_SCALE},"0,12":{x:48*MAP_SCALE,y:40*MAP_SCALE},"0,13":{x:32*MAP_SCALE,y:16*MAP_SCALE},"0,14":{x:40*MAP_SCALE,y:64*MAP_SCALE},"0,15":{x:144*MAP_SCALE,y:96*MAP_SCALE},"0,19":{x:5*MAP_SCALE,y:82*MAP_SCALE},"0,20":{x:8*MAP_SCALE,y:100*MAP_SCALE},"0,21":{x:8*MAP_SCALE,y:120*MAP_SCALE},"0,23":{x:30*MAP_SCALE,y:128*MAP_SCALE},"0,24":{x:72*MAP_SCALE,y:115*MAP_SCALE},"0,25":{x:72*MAP_SCALE,y:70*MAP_SCALE},"0,26":{x:72*MAP_SCALE,y:27*MAP_SCALE},"0,27":{x:62*MAP_SCALE,y:30*MAP_SCALE},"0,28":{x:40*MAP_SCALE,y:16*MAP_SCALE},"0,29":{x:15*MAP_SCALE,y:16*MAP_SCALE},"0,30":{x:8*MAP_SCALE,y:45*MAP_SCALE},"0,31":{x:8*MAP_SCALE,y:54*MAP_SCALE},"0,32":{x:50*MAP_SCALE,y:64*MAP_SCALE},"0,34":{x:90*MAP_SCALE,y:16*MAP_SCALE},"0,35":{x:124*MAP_SCALE,y:16*MAP_SCALE},"0,36":{x:132*MAP_SCALE,y:40*MAP_SCALE},"0,37":{x:132*MAP_SCALE,y:45*MAP_SCALE},"0,38":{x:122*MAP_SCALE,y:64*MAP_SCALE},"0,39":{x:172*MAP_SCALE,y:40*MAP_SCALE},"0,40":{x:200*MAP_SCALE,y:46*MAP_SCALE},"0,46":{x:155*MAP_SCALE,y:96*MAP_SCALE},"0,51":{x:1*MAP_SCALE,y:150*MAP_SCALE},"0,53":{x:2*MAP_SCALE,y:150*MAP_SCALE},"24,5":{x:3*MAP_SCALE,y:150*MAP_SCALE},"24,26":{x:4*MAP_SCALE,y:150*MAP_SCALE},"24,0":{x:10*MAP_SCALE,y:150*MAP_SCALE},"24,1":{x:15*MAP_SCALE,y:150*MAP_SCALE},"24,2":{x:20*MAP_SCALE,y:150*MAP_SCALE},"24,3":{x:25*MAP_SCALE,y:150*MAP_SCALE},"24,4":{x:150*MAP_SCALE,y:56*MAP_SCALE},"24,5":{x:30*MAP_SCALE,y:150*MAP_SCALE},"24,6":{x:35*MAP_SCALE,y:150*MAP_SCALE},"24,7":{x:45*MAP_SCALE,y:150*MAP_SCALE},"24,8":{x:50*MAP_SCALE,y:150*MAP_SCALE},"24,9":{x:55*MAP_SCALE,y:150*MAP_SCALE},"24,10":{x:60*MAP_SCALE,y:150*MAP_SCALE},"24,11":{x:4*MAP_SCALE,y:82*MAP_SCALE},"24,12":{x:65*MAP_SCALE,y:150*MAP_SCALE},"24,13":{x:70*MAP_SCALE,y:150*MAP_SCALE},"24,14":{x:75*MAP_SCALE,y:150*MAP_SCALE},"24,15":{x:80*MAP_SCALE,y:150*MAP_SCALE},"24,16":{x:85*MAP_SCALE,y:150*MAP_SCALE},"24,17":{x:95*MAP_SCALE,y:150*MAP_SCALE},"24,18":{x:100*MAP_SCALE,y:150*MAP_SCALE},"24,19":{x:105*MAP_SCALE,y:150*MAP_SCALE},"24,20":{x:110*MAP_SCALE,y:150*MAP_SCALE},"24,21":{x:115*MAP_SCALE,y:150*MAP_SCALE},"24,22":{x:120*MAP_SCALE,y:150*MAP_SCALE},"24,23":{x:125*MAP_SCALE,y:150*MAP_SCALE},"24,24":{x:130*MAP_SCALE,y:150*MAP_SCALE},"24,25":{x:135*MAP_SCALE,y:150*MAP_SCALE},"24,28":{x:0*MAP_SCALE,y:160*MAP_SCALE},"24,29":{x:5*MAP_SCALE,y:160*MAP_SCALE},"24,30":{x:10*MAP_SCALE,y:160*MAP_SCALE},"24,31":{x:15*MAP_SCALE,y:160*MAP_SCALE},"24,34":{x:20*MAP_SCALE,y:160*MAP_SCALE},"24,35":{x:25*MAP_SCALE,y:160*MAP_SCALE},"24,36":{x:30*MAP_SCALE,y:160*MAP_SCALE},"24,37":{x:35*MAP_SCALE,y:160*MAP_SCALE},"24,42":{x:40*MAP_SCALE,y:160*MAP_SCALE},"24,43":{x:45*MAP_SCALE,y:160*MAP_SCALE},"24,44":{x:50*MAP_SCALE,y:160*MAP_SCALE},"24,45":{x:55*MAP_SCALE,y:160*MAP_SCALE},"24,52":{x:60*MAP_SCALE,y:160*MAP_SCALE},"24,53":{x:65*MAP_SCALE,y:160*MAP_SCALE},"24,54":{x:65*MAP_SCALE,y:160*MAP_SCALE},"24,55":{x:70*MAP_SCALE,y:160*MAP_SCALE},"24,56":{x:75*MAP_SCALE,y:160*MAP_SCALE},"24,57":{x:80*MAP_SCALE,y:160*MAP_SCALE},"24,58":{x:85*MAP_SCALE,y:160*MAP_SCALE},"24,59":{x:90*MAP_SCALE,y:160*MAP_SCALE},"24,60":{x:95*MAP_SCALE,y:160*MAP_SCALE},"24,61":{x:100*MAP_SCALE,y:160*MAP_SCALE},"24,62":{x:105*MAP_SCALE,y:160*MAP_SCALE},"24,63":{x:110*MAP_SCALE,y:160*MAP_SCALE},"24,64":{x:115*MAP_SCALE,y:160*MAP_SCALE},"24,65":{x:120*MAP_SCALE,y:160*MAP_SCALE},"24,67":{x:125*MAP_SCALE,y:160*MAP_SCALE},"24,68":{x:130*MAP_SCALE,y:160*MAP_SCALE},"24,73":{x:135*MAP_SCALE,y:160*MAP_SCALE},"24,77":{x:140*MAP_SCALE,y:160*MAP_SCALE},"24,78":{x:145*MAP_SCALE,y:160*MAP_SCALE},"24,79":{x:150*MAP_SCALE,y:160*MAP_SCALE},"24,80":{x:0*MAP_SCALE,y:170*MAP_SCALE},"24,81":{x:5*MAP_SCALE,y:170*MAP_SCALE},"24,82":{x:10*MAP_SCALE,y:170*MAP_SCALE},"24,84":{x:15*MAP_SCALE,y:170*MAP_SCALE},"24,85":{x:20*MAP_SCALE,y:170*MAP_SCALE},"24,86":{x:25*MAP_SCALE,y:170*MAP_SCALE},"24,87":{x:30*MAP_SCALE,y:170*MAP_SCALE},"24,88":{x:35*MAP_SCALE,y:170*MAP_SCALE},"24,89":{x:40*MAP_SCALE,y:170*MAP_SCALE},"24,90":{x:45*MAP_SCALE,y:170*MAP_SCALE},"24,91":{x:50*MAP_SCALE,y:170*MAP_SCALE},"24,92":{x:55*MAP_SCALE,y:170*MAP_SCALE},"24,93":{x:60*MAP_SCALE,y:170*MAP_SCALE},"24,94":{x:65*MAP_SCALE,y:170*MAP_SCALE},"24,95":{x:70*MAP_SCALE,y:170*MAP_SCALE},"24,96":{x:75*MAP_SCALE,y:170*MAP_SCALE},"24,97":{x:80*MAP_SCALE,y:170*MAP_SCALE},"24,103":{x:85*MAP_SCALE,y:170*MAP_SCALE},"24,105":{x:90*MAP_SCALE,y:170*MAP_SCALE},"24,107":{x:90*MAP_SCALE,y:170*MAP_SCALE},"26,10":{x:100*MAP_SCALE,y:170*MAP_SCALE},"26,56":{x:105*MAP_SCALE,y:170*MAP_SCALE},"26,57":{x:110*MAP_SCALE,y:170*MAP_SCALE},"26,58":{x:115*MAP_SCALE,y:170*MAP_SCALE},"26,60":{x:120*MAP_SCALE,y:170*MAP_SCALE},"26,66":{x:125*MAP_SCALE,y:170*MAP_SCALE},"26,68":{x:130*MAP_SCALE,y:170*MAP_SCALE},"26,69":{x:135*MAP_SCALE,y:170*MAP_SCALE},"26,70":{x:140*MAP_SCALE,y:170*MAP_SCALE},"26,74":{x:145*MAP_SCALE,y:170*MAP_SCALE},"26,75":{x:150*MAP_SCALE,y:170*MAP_SCALE},"26,87":{x:155*MAP_SCALE,y:170*MAP_SCALE},"26,9":{x:160*MAP_SCALE,y:170*MAP_SCALE}},BANK_TO_EXTERNAL_HUB={1:"0,9",2:"0,10",3:"0,11",4:"0,12",5:"0,13",6:"0,14",7:"0,15",8:"0,0",9:"0,1",10:"0,2",11:"0,3",12:"0,4",13:"0,5",14:"0,6",15:"0,7",16:"0,8",17:"0,19",18:"0,26",19:"0,27",20:"0,29",21:"0,31",22:"0,32",23:"0,36",27:"0,19",28:"0,24",29:"0,25",30:"0,28",31:"0,38",32:"0,34",33:"0,39"};function nodeToPosition(e){if(e.data().isWarp){let t=e.data().id,a=getMapData()[t],n=mapBankToPosition(toMapBank(e.data().id),t.split(",")[3]);if(!n)return{x:0,y:0};let A=a.name.split("-")[3].trim(),i="0"==t.split(",")[1],s=i?OUTSIDE_MAP_SCALE:INSIDE_MAP_SCALE;return i||e.addClass("indoors"),{x:n.x+s*parseInt(A.split(",")[0],16),y:n.y+s*parseInt(A.split(",")[1],16)}}return{x:0,y:0}}var missingParentList=new Set,addedGroups=new Set;function mapBankToPosition(e,t){let a=MAP_BANK_POSITION[e.substring(2)];if(a)return a;let n=BANK_TO_EXTERNAL_HUB[e.split(",")[1]];return n&&(a=MAP_BANK_POSITION[n],a)?(a.y=a.y-20*INSIDE_MAP_SCALE,a):(missingParentList.add(e),!1)}
//# sourceMappingURL=build-index.c31ce2d9.js.map
