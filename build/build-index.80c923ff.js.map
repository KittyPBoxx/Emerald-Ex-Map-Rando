{"mappings":"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","sources":["dist/Randomiser/Randomisation.js"],"sourcesContent":["var mixedGameData = {};\nObject.entries(EMERALD_WARPS).forEach(e => mixedGameData[e[0]] = e[1]);\n\nvar remappingsData = {};\nvar isHeadless = true;\n\n// WarpList used by EmulationCoreHacks.js\nvar warpList = new Map();\n\nfunction getMapData() {\n    return mixedGameData;\n}\n\nfunction getRandomisationAlgorithm() {\n    return generateRandomMappings;\n}\n\nfunction getRandomisationConfig() {\n    let config = {};\n    config.hoennLevel = document.getElementById(\"hoennLevel\").value;\n    return config;\n}\n\nfunction getFlagData() {\n  return FLAG_DATA;\n}\n\nfunction mappingToWarps(mappingData) {\n    let mappedList = new Map();\n\n    mappingData.forEach(mapping => {\n        let from = mapping.trigger;\n        let to = mapping.target;\n        let toParts = to.split(\",\");\n        mappedList.set(from, new PKWarp(from, toParts[0], toParts[1], toParts[2], toParts[3], mapping.source));\n    });\n\n    return mappedList;\n}\n\nasync function mapWarps(seed) {\n\n    flagsState = {};\n    unaddedConditionalEdges = {};\n\n    let config = getRandomisationConfig();\n    let mapData = getFilteredData();\n    let flagData = getFlagData()\n    remappingsData = getRandomisationAlgorithm().apply(null, [seed, mapData, flagData, config]);\n    warpList = mappingToWarps(getAugmetedRemappingData(remappingsData));\n    updateHashDisplay();\n\n    if (typeof storageManager !== 'undefined') {\n      storageManager.persist(\"RANDOM_MAPPING\", new WarpListData(seed, config, warpList));\n    }\n}\n\nfunction generateRandomMappings(seed, mapData, flagData, config) {\n    \n    let rng = new RNG(getHash(seed));\n    let progressionState = initMappingGraph(mapData, isHeadless, new ProgressionState(flagData, config))\n\n    var root = getInitialWarp(config);\n\n    progressionState.unconnectedComponents = progressionState.unconnectedComponents.filter(a => !a.includes(root));\n\n    var moreWarpsToMap = true;\n    while(moreWarpsToMap) {\n        moreWarpsToMap = doNextMapping(rng, root, progressionState);\n        progressionState = updateProgressionState(progressionState, root);\n    }\n\n   return getBaseRemappingData();\n}\n\nfunction getInitialWarp(config) {\n  return KEY_LOCATION_DATA[\"OLDALE TOWN\"];\n}\n\nfunction filterIgnored(mapData) {\n    return new Map([...mapData].filter(k => !k[1].ignore));\n}\n\nfunction filterByConfig(usabledWarps, config) {\n    usabledWarps = new Map([...usabledWarps].filter(w => {\n        let filterLevel = null;\n        if (w[0][0] == \"E\") {\n            filterLevel = config.hoennLevel;\n        } else if (w[0][0] == \"F\") {\n            filterLevel = config.kantoLevel;\n        } else if (w[0][0] == \"C\") {\n            filterLevel = config.johtoLevel;\n        }\n\n        return usabledWarps.get(w[0]).level && (+usabledWarps.get(w[0]).level <= +filterLevel);\n    }));\n    return usabledWarps;\n}\n\nfunction filteGroupedNotMain(mapData) {\n    return new Map([...mapData].filter(k => k[1].groupMain || !k[1].grouped));\n} \n\nfunction toMapBank(s) { \n    let arr = s.split(\",\"); \n    return arr[0] + \",\" + arr[1] + \",\" + arr[2] \n}\n\nfunction ProgressionState(flagData, config) {\n  this.remainingConditionalEdges = new Set();\n  this.flags = new Set();\n  this.flagData = flagData;\n  this.config = config;\n  // Locations that may grant further progress\n  this.unmarkedLocations = new Map(Object.entries(flagData.LOCATIONS_TRIGGER));\n  this.unmarkedFlags = new Map(Object.entries(flagData.COMPOSITE_FLAGS));\n  // Locations that will not grant progress but should be included anyway\n  this.unmarkedKeyLocations = new Map(Object.entries(flagData.KEY_LOCATIONS))\n}\n\nProgressionState.prototype.makeFinalLocationsKey = function (config) {\n\n  let finalLocations = [];\n\n  switch(this.config.hoennLevel) {\n    case \"1\": finalLocations.push(HINTABLE_LOCATIONS[\"ROXANNE\"])      ; break;\n    case \"2\": finalLocations.push(HINTABLE_LOCATIONS[\"BRAWLY\"])       ; break;\n    case \"3\": finalLocations.push(HINTABLE_LOCATIONS[\"WATTSON\"])      ; break; \n    case \"4\": finalLocations.push(HINTABLE_LOCATIONS[\"FLANNERY\"])     ; break;\n    case \"5\": finalLocations.push(HINTABLE_LOCATIONS[\"NORMAN\"])       ; break;\n    case \"6\": finalLocations.push(HINTABLE_LOCATIONS[\"WINONA\"])       ; break;\n    case \"7\": finalLocations.push(HINTABLE_LOCATIONS[\"TATE AND LIZA\"]); break;\n    case \"8\": finalLocations.push(HINTABLE_LOCATIONS[\"JUAN\"])         ; break;\n    case \"9\": \n    case \"0\": \n    case \"10\": \n    default:\n      // E4 and upwards are key locations not progression anyway  \n      break;\n  }\n\n  finalLocations.forEach(l => {\n    if (this.unmarkedLocations.has(l)) {\n      this.unmarkedKeyLocations.set(l, this.unmarkedLocations.get(l))\n      this.unmarkedLocations.delete(l);\n    }\n  })\n\n}\n\n/** \n *  Warp data model\n */\nfunction WarpListData(seed, config, warpList) {\n  this.warpList = Array.from(warpList.entries());\n  this.seed = seed;\n  this.config = config;\n} \n\nfunction exportMapping() {\n  storageManager.find(\"RANDOM_MAPPING\").then(s => {\n      let data = JSON.stringify(s);\n      let file = new File([data], \"WarpMapping.json\", {type: \"application/json;charset=utf-8\"});\n      saveAs(file);\n  });\n}\n\nfunction importMapping() {\n  let file = this.files[0];\n\n  let reader = new FileReader();\n  reader.readAsText(file,'UTF-8');\n\n  reader.onload = readerEvent => {\n      let content = readerEvent.target.result;\n      let warpListData = JSON.parse(content);\n      updateWarpListData(warpListData);\n      storageManager.persist(\"RANDOM_MAPPING\", warpListData);\n   }\n}\n\nfunction updateWarpListData(warpListData) {\n  document.getElementById(\"input_seed_text\").value = warpListData.seed;\n\n  document.getElementById(\"hoennLevel\").value = warpListData.config.hoennLevel;\n  M.FormSelect.getInstance(document.getElementById(\"hoennLevel\"))._handleSelectChangeBound();\n\n  warpList = new Map(warpListData.warpList);\n  updateHashDisplay();\n}\n\nfunction updateHashDisplay() {\n  document.getElementById(\"hashText\").innerHTML = \"CHECK: \" + Math.abs(getHash(JSON.stringify(Array.from(warpList)))).toString(16).toUpperCase();\n}\n\n/**\n *  Warp Script model \n */\n function PKWarp(trigger, romCode, bank, map, warpNo, source) {\n    this.trigger = trigger;\n    this.toRomCode = romCode;\n    this.toBank = bank;\n    this.toMap = map;\n    this.toWarpNo = warpNo;\n    this.source = source;\n}\n\n/**\n *  SEEDED RNG MANAGEMENT\n */\n\nfunction getHash(input){\n    var hash = 0, len = input.length;\n    for (var i = 0; i < len; i++) {\n      hash  = ((hash << 5) - hash) + input.charCodeAt(i);\n      hash |= 0; // to 32bit integer\n    }\n    return hash;\n}\n\nfunction RNG(seed) {\n    // LCG using GCC's constants\n    this.m = 0x80000000; // 2**31;\n    this.a = 1103515245;\n    this.c = 12345;\n  \n    this.state = seed ? seed : Math.floor(Math.random() * (this.m - 1));\n}\nRNG.prototype.nextInt = function() {\n  this.state = (this.a * this.state + this.c) % this.m;\n  return this.state;\n}\nRNG.prototype.nextFloat = function() {\n  // returns in range [0,1]\n  return this.nextInt() / (this.m - 1);\n}\nRNG.prototype.nextRange = function(start, end) {\n  // returns in range [start, end): including start, excluding end\n  // can't modulu nextInt because of weak randomness in lower bits\n  var rangeSize = end - start;\n  var randomUnder1 = this.nextInt() / this.m;\n  return Math.abs(start + Math.floor(randomUnder1 * rangeSize));\n}\nRNG.prototype.choice = function(array) {\n  return array[this.nextRange(0, array.length)];\n}\n\n/**\n *  GRAPHING / CONNECTION MANAGEMENT\n */\n\n function ReigonNode(id) {\n    this.data = {};\n    this.data.id = id;\n    this.classes = 'reigon';\n}\n\nfunction AreaNode(node) {\n    this.data = {};\n    this.data.id = toMapBank(node[0]);\n    this.data.isMap = true;\n    this.data.parent = toReigon(node[0]);\n    this.data.label = node[0] + \" (\" + node[1].name.split(\"-\")[0] + \"- \" + node[1].name.split(\"-\")[1].trim() + \")\";\n}\n\nfunction WarpNode(data) {\n    this.data = {};\n    this.data.id = data[0];\n    this.data.parent = toMapBank(data[0]);\n    this.data.label = data[1].name ? data[0] + data[1].name.split(\"-\")[2] : data[0] + \" (Unnamed)\";\n    this.classes = 'outline';\n    this.data.isWarp = true;\n    this.data.isMapped = false;\n    this.data.needsReturn = data[1].tags && data[1].tags.includes(\"needs_return\");\n    this.data.noReturn = data[1].tags && data[1].tags.includes(\"no_return\");\n    this.data.hasMultipleConnections = data[1].connections ? Object.values(data[1].connections).filter(n => n == true).length > 0 : false;\n}\n\nfunction FixedEdge(source, target) {\n    this.data = {};\n    this.data.id = source + \"->\" + target;\n    this.data.source = source;\n    this.data.target = target;\n    this.classes = 'fixed';\n}\n\nfunction CondidtionalEdge(source, target, condition) {\n  this.data = {};\n  this.data.id = source + \"->\" + target;\n  this.data.source = source;\n  this.data.target = target;\n  this.classes = 'conditional';\n  this.condition = condition;\n}\n\nfunction WarpEdge(source, target, count) {\n  this.data = {};\n  this.data.id = source + \"->\" + target + \"#\" + window.cy.getElementById(source + \"->\" + target).length;\n  this.data.source = source;\n  this.data.target = target;\n  this.data.isWarp = true;\n  this.classes = 'warp';\n}\n\nfunction getAugmetedRemappingData(remappingData) {\n\n  remappingData = addGroupedMappings(remappingData);\n  remappingData = addTriggerData(remappingData);\n\n  return remappingData;\n}\n\nfunction addGroupedMappings(remappingData) {\n  \n  let groupMappings = [];\n\n  remappingData.forEach(m => {\n    let groups = getMapData()[m.source].grouped;\n    if (groups) {\n      groups.forEach(g => {\n        groupMappings.push({source: g, target: m.target});\n      });\n    }\n  })\n\n  return [...remappingData, ...groupMappings];\n}\n\nfunction addTriggerData(remappingData) {\n\n  return remappingData.map(m => {\n    m.trigger = getMapData()[m.source].to;\n    return m;\n  });\n\n}\n\nfunction getBaseRemappingData() {\n  return cy.edges().filter(e => e.data().isWarp).map(e => { return {source: e.data().source, target: e.data().target} });\n}\n\nfunction getFilteredData() {\n    let warpIdData = new Map(Object.entries(getMapData()));\n    warpIdData = filterIgnored(warpIdData);\n    warpIdData = filteGroupedNotMain(warpIdData);\n    warpIdData = filterByConfig(warpIdData, getRandomisationConfig());\n    return warpIdData;\n}\n\nfunction toReigon(id) {\n  return 'HOENN'\n}\n\nfunction findAccessibleUnmappedNodes(cy, root) {\n  let nodeSet = new Set();\n  cy.elements().bfs({roots: cy.getElementById(root), directed: true, visit: (v, e, u, i, depth) => {\n    \n    if(!v.data().isMapped) {\n      nodeSet.add(v)\n    }\n\n  }});\n  return nodeSet;\n}\n\nfunction doNextMapping(rng, root, progressionState) {\n    let accessibleNodes = progressionState.cachedNodes ? progressionState.cachedNodes : findAccessibleUnmappedNodes(window.cy, root);\n    let inacessibleNodes = cy.nodes().not(accessibleNodes).filter(e => e.data().isWarp && !e.data().isMapped);\n    let inaccesibleFlagLocations = inacessibleNodes.filter(n => progressionState.unmarkedLocations.has(n.data().id));\n    let inaccesibleKeyLocations = inacessibleNodes.filter(n => progressionState.unmarkedLocations.has(n.data().id));\n\n    if(accessibleNodes.size == 0 && inacessibleNodes.length == 0) { \n      return false; \n    }\n\n    let warp1 = [...accessibleNodes][rng.nextRange(0, accessibleNodes.size - 1)];\n    accessibleNodes.delete(warp1);\n    \n    let warp2 = null;\n    let shouldCacheNodes = false;\n    let inacessibleHubs = inacessibleNodes.filter(e => e.degree(true) > 0);\n\n    if (progressionState.unconnectedComponents.length > 0) {\n\n      // Add a node from every component of the graph (with the assumption no warps are present but all flags are met)\n      let randomComponent = progressionState.unconnectedComponents[rng.nextRange(0, progressionState.unconnectedComponents.length - 1)];\n      let randomNodeIdFromComponent = selectRandomWarp(rng, randomComponent, warp1);\n\n      warp2 = cy.getElementById(randomNodeIdFromComponent);\n      progressionState.unconnectedComponents = progressionState.unconnectedComponents.filter(c => c != randomComponent);\n\n    } else if (inaccesibleFlagLocations.length > 0) { \n\n      // Add inacessible dead-ends that might allow flags givinb access to new locations\n      warp2 = selectRandomWarp(rng, inaccesibleFlagLocations, warp1);\n      warp2.addClass(\"significant\");\n\n    } else if (inacessibleHubs.length > 0) {\n\n      // Add any hubs that there is still no access to... I'm not sure there would even be any left...\n      inacessibleNodes = inacessibleNodes.filter(e => e.degree(true) > 0);\n      warp2 = selectRandomWarp(rng, inacessibleNodes, warp1);\n\n    } else if (inaccesibleKeyLocations.length > 0) {\n\n      // Add key inacessible locations \n      warp2 = selectRandomWarp(rng, inaccesibleKeyLocations, warp1); \n      shouldCacheNodes = true;\n      accessibleNodes.delete(warp2);\n      warp2.addClass(\"significant\");\n\n    } else if (inacessibleNodes.length > 0) {\n\n      // Add other inacessible dead-ends \n      warp2 = selectRandomWarp(rng, inacessibleNodes, warp1); \n      shouldCacheNodes = true;\n      accessibleNodes.delete(warp2);\n\n    } else if (accessibleNodes.size > 0) {\n\n      // map together nodes that are already accessible\n      warp2 = selectRandomWarp(rng, [...accessibleNodes], warp1);\n      shouldCacheNodes = true;\n      accessibleNodes.delete(warp2);\n\n    } else {\n      //console.warn(\"Unevenly matched warps. \" + warp1.data().id + \" had to map to itself\");\n      // warp2 = warp1\n\n      // if one warp is left hanging we connect it to altering cave from fire red\n      warp2 = cy.add(new WarpNode(['E,24,106,0', getMapData()[\"E,24,106,0\"]]));\n      shouldCacheNodes = true;\n      accessibleNodes.delete(warp2);\n\n    }\n\n    // Once it's only dead ends left we can cache which nodes are accessible from the root \n    if (shouldCacheNodes && !progressionState.cachedNodes) {\n        progressionState.cachedNodes = accessibleNodes;\n    }\n\n    if (!warp1) {\n      \n      if (accessibleNodes.size != 0) {\n        console.log(\"Some accessible nodes were left:\")\n        accessibleNodes.forEach(n => {\n          console.log(n.data().id)\n        })\n      } else {\n        console.log(\"All accesible nodes mapped\")\n      }\n\n      if (inacessibleNodes.size != 0) {\n        console.log(\"Some inaccessible nodes were left:\")\n        inacessibleNodes.forEach(n => {\n          console.log(n.data().id)\n        })\n\n        warp2.data().isMapped = true;\n        return false;\n\n      } else {\n        console.log(\"All inaccesible nodes mapped\")\n      }\n\n    }\n\n    window.cy.add(new WarpEdge(warp1.data().id, warp2.data().id))\n\n    if (warp1 != warp2) {\n          window.cy.add(new WarpEdge(warp2.data().id, warp1.data().id))\n    }\n    \n    warp1.data().isMapped = true;\n    warp2.data().isMapped = true;\n\n    return true;\n}\n\nfunction selectRandomWarp(rng, listOfWarps, connectingWarp) {\n\n    // Some warps do not allow bi-directional travel \n    // Some warps need to be accessible in reverse not to block map access. i.e a warp tile you have to walk over to get somewhere\n    // We need to make sure those don't get matched together\n    let warpNeedsReturn = connectingWarp.data().needsReturn;\n    let warpNoReturn = connectingWarp.data().noReturn;\n\n    if (warpNeedsReturn) {\n      listOfWarps = listOfWarps.filter(w => {\n        return typeof w === 'string' ? !cy.getElementById(w).data().noReturn : !w.data().noReturn;\n      });\n    } else if (warpNoReturn) {\n      listOfWarps = listOfWarps.filter(w => {\n        return typeof w === 'string' ? !cy.getElementById(w).data().needsReturn : !w.data().needsReturn;\n      });\n    }\n\n    if (listOfWarps.length == 0) {\n      M.toast({html: 'ERROR: Progression logic could not be verified.<BR> Please try a different seed', displayLength:5000});\n    }\n\n    return listOfWarps[rng.nextRange(0, listOfWarps.length - 1)];\n}\n\n\nfunction updateProgressionState(updateProgressionState, root) {\n\n  let currentNodes = new Set();\n  cy.elements().bfs({roots: cy.getElementById(root), directed: true, visit: (v, e, u, i, depth) => { \n    currentNodes.add(v.data().id) \n  }});\n\n  updateProgressionState.unmarkedLocations.forEach((name, location) => {\n    if (currentNodes.has(location)) {\n      updateProgressionState.unmarkedLocations.delete(location);\n      updateProgressionState.flags.add(name);\n    }\n  });\n\n  updateProgressionState.unmarkedFlags.forEach(n => {\n    if (n.condition.every(flag => updateProgressionState.flags.has(flag))) {\n      updateProgressionState.flags.add(n.flag);\n      updateProgressionState.unmarkedFlags.delete(n.flag)\n    }\n  });\n\n  let conditionalEdges = updateProgressionState.remainingConditionalEdges;\n  conditionalEdges.forEach(e => {\n    if (updateProgressionState.flags.has(e.condition)) {\n      if (cy.getElementById(e.data.target).length > 0 && cy.getElementById(e.data.source).length > 0) {\n        cy.add(e);\n      }\n      conditionalEdges.delete(e);\n    }\n  });\n\n  return updateProgressionState;\n}\n\nfunction initMappingGraph(mapData, isHeadless, progressionState) {\n\n  var cy = window.cy = cytoscape({\n      container: isHeadless ? null : document.getElementById('cy'),\n      headless: isHeadless,\n      styleEnabled: !isHeadless,\n      boxSelectionEnabled: false,\n      textureOnViewport: true,\n    \n      style: [\n        {\n          selector: 'node',\n          css: {\n            'content': 'data(id)',\n            'text-valign': 'center',\n            'text-halign': 'center'\n          }\n        },\n        {\n          selector: ':parent',\n          css: {\n            'text-valign': 'top',\n            'text-halign': 'center'      \n          },\n          style: {\n            'shape' : 'roundrectangle',\n          }\n        },\n        {\n          selector: 'edge',\n          css: {\n            'curve-style': 'bezier',\n            'target-arrow-shape': 'triangle'\n          }\n        },\n        {\n          'selector': 'node[label]',\n          'style': {\n            'label': 'data(label)',\n            'text-valign': 'bottom',\n            'text-halign': 'center'\n          }\n        },\n        {\n          selector: '.reigon',\n          css: {\n              'background-color': '#2f3138',\n              'color' : '#C0C0C0',\n              'font-size' : '5em',\n              \"text-valign\": \"top\"\n          },\n        },\n        {\n          selector: '.map-E',\n          css: {\n              'background-color': '#262729',\n              'color' : '#C0C0C0',\n              'font-size' : '2em'\n          }\n        },\n        {\n          selector: '.warp',\n          css: {\n            'line-color': '#f92411',\n            \"curve-style\": \"straight-triangle\",\n          }\n        },\n        {\n          selector: '.conditional',\n          css: {\n            'line-color': '#1911f9'\n          }\n        },\n        {\n          selector: '.fixed',\n          css: {\n            'opacity': '0.5'\n          }\n        },\n        {\n          selector: '.significant',\n          css: {\n            'background-color': '#FFD700',\n            'shape' : 'hexagon'\n          }\n        },\n        {\n          selector: '.indoors',\n          css: {\n              'background-color': '#543d48',\n          }\n        },\n        {\n          selector: '.faded',\n          css: {\n            opacity: 0.2,\n            'line-color': '#24080c'\n          }\n        },\n      ],\n    \n      elements: {\n        nodes: [],\n        edges: []\n      }\n    });\n\n\n    cy.add(new ReigonNode(\"HOENN\"));\n\n    let data = [...mapData];\n\n    // Add the nodes\n    data.forEach(d => {\n\n      if (!cy.getElementById(toMapBank(d[0])).length) {\n          cy.add(new AreaNode(d)).addClass(\"map-\" + d[0][0]);\n      }\n\n      cy.add(new WarpNode(d));\n    })\n\n    // Add fixed edges\n    data.forEach(d => {\n\n      let connections = d[1].connections ? d[1].connections : {};\n\n      Object.entries(connections).forEach(entry => {\n\n        if (typeof entry[1] == 'string') {\n\n          // Conditional Connection\n          progressionState.remainingConditionalEdges.add(new CondidtionalEdge(d[0], entry[0], entry[1]));\n\n          // Temporarily add conditional edges in the graph so we can work out what areas will be connected in future\n          if (cy.getElementById(entry[0]).length > 0) {\n            cy.add(new CondidtionalEdge(d[0], entry[0], entry[1]))\n          }\n\n        } else {\n\n          // Fixed Connection       \n\n          // Only draw path if connection node is present in total list of warps\n          // i.e if I'm only doing warps to first gym, don't draw a connection to a gym 2 level warp \n          if (cy.getElementById(entry[0]).length > 0) {\n            cy.add(new FixedEdge(d[0], entry[0]))\n          }\n        }\n      });\n    });\n\n    // calculate future connected areas then remove all conditional edges from the network\n    progressionState.unconnectedComponents = cy.elements().components()\n                                                          .filter(e => e.size() > 1)\n                                                          .map(e => e.toArray().filter(n => n.group() == \"nodes\" && n.data().isWarp && n.data().hasMultipleConnections).map(p => p.data().id))\n                                                          .filter(arr => arr.length > 0);\n    progressionState.remainingConditionalEdges.forEach(node => cy.getElementById(node.data.id).remove());\n\n    cy.nodes().forEach(function(node){\n      node.css(\"width\", 80);\n      node.css(\"height\", 80);\n    });\n\n    if (!isHeadless) {\n        cy.layout({name: 'preset', nodeDimensionsIncludeLabels: true, positions:nodeToPosition}).run();\n    }\n\n    progressionState.makeFinalLocationsKey();\n    return progressionState;\n}\n\n/* HINTS */\nfunction getHint(location) {\n  let mapData = new Map(Object.entries(getMapData()));\n  let warp = warpList.get(mapData.get(location).to);\n  if (!warp) {\n    return \"NOT PRESENT\";\n  }\n  let info = mapData.get(warp.toRomCode + \",\" + warp.toBank + \",\" + warp.toMap + \",\" + warp.toWarpNo).name;\n  return info.split(\"-\")[0].trim() + \" - \" + info.split(\"-\")[1].trim();\n}\n\nvar HINTABLE_LOCATIONS = {\n  \"ROXANNE\"          : \"E,11,3,0\"  ,\n  \"BRAWLY\"           : \"E,3,3,0\"   ,\n  \"WATTSON\"          : \"E,10,0,0\"  ,\n  \"FLANNERY\"         : \"E,4,1,0\"   ,\n  \"NORMAN\"           : \"E,8,1,0\"   ,\n  \"WINONA\"           : \"E,12,1,0\"  ,\n  \"TATE AND LIZA\"    : \"E,14,0,0\"  ,\n  \"JUAN\"             : \"E,15,0,0\"  , \n  \"SIDNEY\"           : \"E,16,0,0\"  ,\n  \"PHOEBE\"           : \"E,16,1,0\"  ,\n  \"GLACIA\"           : \"E,16,2,0\"  ,\n  \"DRAKE\"            : \"E,16,3,0\"  ,\n  \"WALLACE\"          : \"E,16,4,0\"  ,\n  \"STEVEN\"           : \"E,24,107,0\",\n}\n\nvar PATH_FINDING_LOCATIONS = {\n  \"CUT\"       : \"E,11,11,0\",       \n  \"FLASH\"     : \"E,24,7,0\" ,         \n  \"ROCKSMASH\" : \"E,10,2,0\" ,             \n  \"STRENGTH\"  : \"E,24,4,0\" ,            \n  \"WATERFALL\" : \"E,0,7,2\"  ,             \n  \n  \"HOHO\"      : \"E,26,75,0\" ,     \n  \"LUGIA\"     : \"E,26,87,0\" ,      \n  \"KYOGRE\"    : \"E,24,103,0\",       \n  \"GRAUDON\"   : \"E,24,105,0\",        \n  \"RAYQUAZA\"  : \"E,24,85,0\" ,         \n  \n  \"BIKE SHOP\"    : \"E,10,1,0\" , \n  \"MAGMA EMBLEM\" : \"E,24,22,1\",    \n  \"STOREAGE KEY\" : \"E,24,63,0\",\n  \n  \"STONE OFFICE\"         : \"E,11,2,0\" , \n  \"STEVEN LETTER\"        : \"E,24,10,0\",  \n  \"WEATHER INSTITUTE F2\" : \"E,32,1,0\" , \n  \"WALLACE ORIGIN CAVE\"  : \"E,24,42,0\", \n  \"METEOR FALLS F1\"      : \"E,24,0,0\" ,  \n\n  \"PETALBURG\" : \"E,0,0,3\" ,\n  \"SLATEPORT\" : \"E,0,1,0\" ,\n  \"MAUVILLE\"  : \"E,0,2,1\" ,\n  \"RUSTBORO\"  : \"E,0,3,3\" ,\n  \"FORTREE\"   : \"E,0,4,0\" ,\n  \"LILYCOVE\"  : \"E,0,5,2\" ,\n  \"MOSSDEEP\"  : \"E,0,6,2\" ,\n  \"SOOTOPOLIS\": \"E,0,7,0\" ,\n  \"DEWFORD\"   : \"E,0,11,1\",\n  \"LAVARIDGE\" : \"E,0,12,3\",\n  \"FALLARBOR\" : \"E,0,13,2\",\n  \"VERDANTURF\": \"E,0,14,2\",\n  \"PACIFIDLOG\": \"E,0,15,0\",\n \n  \"ROXANNE\"          : \"E,11,3,0\"  ,\n  \"BRAWLY\"           : \"E,3,3,0\"   ,\n  \"WATTSON\"          : \"E,10,0,0\"  ,\n  \"FLANNERY\"         : \"E,4,1,0\"   ,\n  \"NORMAN\"           : \"E,8,1,0\"   ,\n  \"WINONA\"           : \"E,12,1,0\"  ,\n  \"TATE AND LIZA\"    : \"E,14,0,0\"  ,\n  \"JUAN\"             : \"E,15,0,0\"  , \n  \"SIDNEY\"           : \"E,16,0,0\"  ,\n  \"PHOEBE\"           : \"E,16,1,0\"  ,\n  \"GLACIA\"           : \"E,16,2,0\"  ,\n  \"DRAKE\"            : \"E,16,3,0\"  ,\n  \"WALLACE\"          : \"E,16,4,0\"  ,\n  \"STEVEN\"           : \"E,24,107,0\",\n}\n\nfunction flagWeight(edge) {\n  if (edge.data().isWarp) {\n    return 1;\n  } \n\n  var difficulty = getMapData()[edge.data().source].connections[edge.data().target];\n\n  if (difficulty === true) {\n    return 1;\n  } else {\n    return Object.values(COMPOSITE_FLAGS).filter(f => f.flag == difficulty)[0].condition.length * 100;\n  }\n}\n\nfunction shortestPath(location) {\n  var fw = cy.elements().floydWarshall({weight: flagWeight,  directed : true})\n  let path = fw.path(cy.getElementById(\"E,0,10,2\"), PATH_FINDING_LOCATIONS[location] ? cy.getElementById(PATH_FINDING_LOCATIONS[location]) : cy.getElementById(location)).map(n =>  {\n     if(n.isNode()) {\n       return getMapData()[n.data().id];\n     } else if (n.data().isWarp) {\n       return {name: n.data().id, type: \"WARP\"}\n     } else {\n       return {name: n.data().id, type: \"WALK\", conditions: [getMapData()[n.data().source].connections[n.data().target]]}\n     }\n  });\n\n  for (i = path.length - 1; i >= 2; i--) {\n    if (path[i].type == \"WALK\" && path[i-2].type == \"WALK\") {\n      path[i].collapse = true;\n      path[i-1].collapse = true;\n\n      path[i-2].conditions = path[i-2].conditions.concat(path[i].conditions);\n    }\n  }\n\n  return path.filter(n => !n.collapse).map(n => {\n    if (n.type && n.conditions) {\n      let requirements = \"(\" + Array.from(new Set(n.conditions.filter(c => typeof c === 'string'))).join(\",\") + \")\";\n      return requirements == \"()\" ? n.type : n.type + requirements;\n    } else if (n.type) {\n      return n.type\n    } \n\n    return n.name\n  });\n}\n\nvar MAP_SCALE = 100;\nvar OUTSIDE_MAP_SCALE = 30;\nvar INSIDE_MAP_SCALE = 10;\n\nvar MAP_BANK_POSITION = {\n\n  // TOWNS\n  \"0,0\" : {x: MAP_SCALE * 16,  y: MAP_SCALE * 88 } , // Petalburg\n  \"0,1\" : {x: MAP_SCALE * 72,  y: MAP_SCALE * 96 } , // Slateport\n  \"0,2\" : {x: MAP_SCALE * 72,  y: MAP_SCALE * 64 } , // Mauville\n  \"0,3\" : {x: MAP_SCALE * 8,   y: MAP_SCALE * 56 } , // Rustboro\n  \"0,4\" : {x: MAP_SCALE * 104, y: MAP_SCALE * 16 } , // Fortree\n  \"0,5\" : {x: MAP_SCALE * 152, y: MAP_SCALE * 40 } , // Lilycove\n  \"0,6\" : {x: MAP_SCALE * 200, y: MAP_SCALE * 56 } , // Mossdeep\n  \"0,7\" : {x: MAP_SCALE * 176, y: MAP_SCALE * 72 } , // Sootopolis\n  \"0,8\" : {x: MAP_SCALE * 224, y: MAP_SCALE * 80 } , // Evergrande\n  \"0,9\" : {x: MAP_SCALE * 40,  y: MAP_SCALE * 68 } , // little root\n  \"0,10\": {x: MAP_SCALE * 40,  y: MAP_SCALE * 88 } , // oldale\n  \"0,11\": {x: MAP_SCALE * 24,  y: MAP_SCALE * 128} , // dewford\n  \"0,12\": {x: MAP_SCALE * 48,  y: MAP_SCALE * 40 } , // lavaridge\n  \"0,13\": {x: MAP_SCALE * 32,  y: MAP_SCALE * 16 } , // fallarbour\n  \"0,14\": {x: MAP_SCALE * 40,  y: MAP_SCALE * 64 } , // verdanturf\n  \"0,15\": {x: MAP_SCALE * 144, y: MAP_SCALE * 96 } , // pacifidlog\n\n  // ROUTES\n\n  \"0,19\"  : {x: MAP_SCALE * 5  , y: MAP_SCALE * 82 }, // r104\n  \"0,20\"  : {x: MAP_SCALE * 8  , y: MAP_SCALE * 100}, // r105\n  \"0,21\"  : {x: MAP_SCALE * 8  , y: MAP_SCALE * 120}, // r106\n  \"0,23\"  : {x: MAP_SCALE * 30 , y: MAP_SCALE * 128}, // r108\n  \"0,24\"  : {x: MAP_SCALE * 72 , y: MAP_SCALE * 115}, // r109\n  \"0,25\"  : {x: MAP_SCALE * 72 , y: MAP_SCALE * 70} , // r110\n  \"0,26\"  : {x: MAP_SCALE * 72 , y: MAP_SCALE * 27} , // r111\n  \"0,27\"  : {x: MAP_SCALE * 62 , y: MAP_SCALE * 30} , // r112\n  \"0,28\"  : {x: MAP_SCALE * 40 , y: MAP_SCALE * 16} , // r113\n  \"0,29\"  : {x: MAP_SCALE * 15 , y: MAP_SCALE * 16} , // r114\n  \"0,30\"  : {x: MAP_SCALE * 8  , y: MAP_SCALE * 45} , // r115\n  \"0,31\"  : {x: MAP_SCALE * 8  , y: MAP_SCALE * 54} , // r116\n  \"0,32\"  : {x: MAP_SCALE * 50 , y: MAP_SCALE * 64} , // r117\n  \"0,34\"  : {x: MAP_SCALE * 90 , y: MAP_SCALE * 16} , // r119\n  \"0,35\"  : {x: MAP_SCALE * 124, y: MAP_SCALE * 16} , // r120\n  \"0,36\"  : {x: MAP_SCALE * 132, y: MAP_SCALE * 40} , // r121\n  \"0,37\"  : {x: MAP_SCALE * 132, y: MAP_SCALE * 45} , // r122\n  \"0,38\"  : {x: MAP_SCALE * 122, y: MAP_SCALE * 64} , // r123\n  \"0,39\"  : {x: MAP_SCALE * 172, y: MAP_SCALE * 40} , // r124\n  \"0,40\"  : {x: MAP_SCALE * 200, y: MAP_SCALE * 46} , // r125\n  \"0,46\"  : {x: MAP_SCALE * 155, y: MAP_SCALE * 96 }, // r131\n\n  // // UNDERWATER\n\n  \"0,51\"   : {x: MAP_SCALE * 1, y: MAP_SCALE * 150},\n  \"0,53\"   : {x: MAP_SCALE * 2, y: MAP_SCALE * 150},\n  \"24,5\"   : {x: MAP_SCALE * 3, y: MAP_SCALE * 150},\n  \"24,26\"  : {x: MAP_SCALE * 4, y: MAP_SCALE * 150},\n\n  // LOCATIONS\n\n    // Meteor Falls\n  \"24,0\"  : {x: MAP_SCALE * 10, y: MAP_SCALE * 150},\n  \"24,1\"  : {x: MAP_SCALE * 15, y: MAP_SCALE * 150}, \n  \"24,2\"  : {x: MAP_SCALE * 20, y: MAP_SCALE * 150}, \n  \"24,3\"  : {x: MAP_SCALE * 25, y: MAP_SCALE * 150}, \n\n    // Rusturf Tunnel\n  \"24,4\"  : {x: MAP_SCALE * 150, y: MAP_SCALE * 56}, \n\n    // Underwater\n  \"24,5\"  : {x: MAP_SCALE * 30, y: MAP_SCALE * 150}, \n\n    // Desert Ruins\n  \"24,6\"  : {x: MAP_SCALE * 35, y: MAP_SCALE * 150}, \n\n    // Granite Cave\n  \"24,7\"  : {x: MAP_SCALE * 45, y: MAP_SCALE * 150}, \n  \"24,8\"  : {x: MAP_SCALE * 50, y: MAP_SCALE * 150}, \n  \"24,9\"  : {x: MAP_SCALE * 55, y: MAP_SCALE * 150}, \n  \"24,10\" : {x: MAP_SCALE * 60, y: MAP_SCALE * 150}, \n\n    // Petalburg Woods\n  \"24,11\" : {x: MAP_SCALE * 4 , y: MAP_SCALE * 82}, \n\n    // Mt chimney\n  \"24,12\"  : {x: MAP_SCALE * 65, y: MAP_SCALE * 150},\n    // Jagged pass\n  \"24,13\"  : {x: MAP_SCALE * 70, y: MAP_SCALE * 150},\n    // Firey Path\n  \"24,14\"  : {x: MAP_SCALE * 75, y: MAP_SCALE * 150},\n    // Mt Pyer \n  \"24,15\"  : {x: MAP_SCALE * 80 , y: MAP_SCALE * 150},\n  \"24,16\"  : {x: MAP_SCALE * 85 , y: MAP_SCALE * 150},\n  \"24,17\"  : {x: MAP_SCALE * 95 , y: MAP_SCALE * 150},\n  \"24,18\"  : {x: MAP_SCALE * 100, y: MAP_SCALE * 150},\n  \"24,19\"  : {x: MAP_SCALE * 105, y: MAP_SCALE * 150},\n  \"24,20\"  : {x: MAP_SCALE * 110, y: MAP_SCALE * 150},\n  \"24,21\"  : {x: MAP_SCALE * 115, y: MAP_SCALE * 150},\n  \"24,22\"  : {x: MAP_SCALE * 120, y: MAP_SCALE * 150},\n    // Aqua Hideout\n  \"24,23\"  : {x: MAP_SCALE * 125, y: MAP_SCALE * 150},\n  \"24,24\"  : {x: MAP_SCALE * 130, y: MAP_SCALE * 150},\n  \"24,25\"  : {x: MAP_SCALE * 135, y: MAP_SCALE * 150},\n    // Seafloor cavern\n  \"24,28\"  : {x: MAP_SCALE * 0 , y: MAP_SCALE * 160},\n  \"24,29\"  : {x: MAP_SCALE * 5 , y: MAP_SCALE * 160},\n  \"24,30\"  : {x: MAP_SCALE * 10, y: MAP_SCALE * 160},\n  \"24,31\"  : {x: MAP_SCALE * 15, y: MAP_SCALE * 160},\n  \"24,34\"  : {x: MAP_SCALE * 20, y: MAP_SCALE * 160},\n  \"24,35\"  : {x: MAP_SCALE * 25, y: MAP_SCALE * 160},\n  \"24,36\"  : {x: MAP_SCALE * 30, y: MAP_SCALE * 160},\n    // Cave of origin\n  \"24,37\"  : {x: MAP_SCALE * 35, y: MAP_SCALE * 160},\n  \"24,42\"  : {x: MAP_SCALE * 40, y: MAP_SCALE * 160},\n    // Victory road\n  \"24,43\"  : {x: MAP_SCALE * 45, y: MAP_SCALE * 160},\n  \"24,44\"  : {x: MAP_SCALE * 50, y: MAP_SCALE * 160},\n  \"24,45\"  : {x: MAP_SCALE * 55, y: MAP_SCALE * 160},\n    // New Mauville\n  \"24,52\"  : {x: MAP_SCALE * 60, y: MAP_SCALE * 160},\n  \"24,53\"  : {x: MAP_SCALE * 65, y: MAP_SCALE * 160},\n    // Abandoned ship\n  \"24,54\"  : {x: MAP_SCALE * 65 , y: MAP_SCALE * 160},\n  \"24,55\"  : {x: MAP_SCALE * 70 , y: MAP_SCALE * 160},\n  \"24,56\"  : {x: MAP_SCALE * 75 , y: MAP_SCALE * 160},\n  \"24,57\"  : {x: MAP_SCALE * 80 , y: MAP_SCALE * 160},\n  \"24,58\"  : {x: MAP_SCALE * 85 , y: MAP_SCALE * 160},\n  \"24,59\"  : {x: MAP_SCALE * 90 , y: MAP_SCALE * 160},\n  \"24,60\"  : {x: MAP_SCALE * 95 , y: MAP_SCALE * 160},\n  \"24,61\"  : {x: MAP_SCALE * 100, y: MAP_SCALE * 160},\n  \"24,62\"  : {x: MAP_SCALE * 105, y: MAP_SCALE * 160},\n  \"24,63\"  : {x: MAP_SCALE * 110, y: MAP_SCALE * 160},\n  \"24,64\"  : {x: MAP_SCALE * 115, y: MAP_SCALE * 160},\n  \"24,65\"  : {x: MAP_SCALE * 120, y: MAP_SCALE * 160},\n    // Island cave\n  \"24,67\"  : {x: MAP_SCALE * 125, y: MAP_SCALE * 160},\n  \"24,68\"  : {x: MAP_SCALE * 130, y: MAP_SCALE * 160},\n  \"24,73\"  : {x: MAP_SCALE * 135, y: MAP_SCALE * 160},\n  \"24,77\"  : {x: MAP_SCALE * 140, y: MAP_SCALE * 160},\n  \"24,78\"  : {x: MAP_SCALE * 145, y: MAP_SCALE * 160},\n  \"24,79\"  : {x: MAP_SCALE * 150, y: MAP_SCALE * 160},\n  \"24,80\"  : {x: MAP_SCALE * 0, y: MAP_SCALE * 170},\n  \"24,81\"  : {x: MAP_SCALE * 5, y: MAP_SCALE * 170},\n  \"24,82\"  : {x: MAP_SCALE * 10, y: MAP_SCALE * 170},\n  \"24,84\"  : {x: MAP_SCALE * 15, y: MAP_SCALE * 170},\n  \"24,85\"  : {x: MAP_SCALE * 20, y: MAP_SCALE * 170},\n  \"24,86\"  : {x: MAP_SCALE * 25, y: MAP_SCALE * 170},\n  \"24,87\"  : {x: MAP_SCALE * 30, y: MAP_SCALE * 170},\n  \"24,88\"  : {x: MAP_SCALE * 35, y: MAP_SCALE * 170},\n  \"24,89\"  : {x: MAP_SCALE * 40, y: MAP_SCALE * 170},\n  \"24,90\"  : {x: MAP_SCALE * 45, y: MAP_SCALE * 170},\n  \"24,91\"  : {x: MAP_SCALE * 50, y: MAP_SCALE * 170},\n  \"24,92\"  : {x: MAP_SCALE * 55, y: MAP_SCALE * 170},\n  \"24,93\"  : {x: MAP_SCALE * 60, y: MAP_SCALE * 170},\n  \"24,94\"  : {x: MAP_SCALE * 65, y: MAP_SCALE * 170},\n  \"24,95\"  : {x: MAP_SCALE * 70, y: MAP_SCALE * 170},\n  \"24,96\"  : {x: MAP_SCALE * 75, y: MAP_SCALE * 170},\n  \"24,97\"  : {x: MAP_SCALE * 80, y: MAP_SCALE * 170},\n  \"24,103\" : {x: MAP_SCALE * 85, y: MAP_SCALE * 170},\n  \"24,105\" : {x: MAP_SCALE * 90, y: MAP_SCALE * 170},\n  \"24,107\" : {x: MAP_SCALE * 90, y: MAP_SCALE * 170},\n  \"26,10\"  : {x: MAP_SCALE * 100, y: MAP_SCALE * 170},\n  \"26,56\"  : {x: MAP_SCALE * 105, y: MAP_SCALE * 170},\n  \"26,57\"  : {x: MAP_SCALE * 110, y: MAP_SCALE * 170},\n  \"26,58\"  : {x: MAP_SCALE * 115, y: MAP_SCALE * 170},\n  \"26,60\"  : {x: MAP_SCALE * 120, y: MAP_SCALE * 170},\n  \"26,66\"  : {x: MAP_SCALE * 125, y: MAP_SCALE * 170},\n  \"26,68\"  : {x: MAP_SCALE * 130, y: MAP_SCALE * 170},\n  \"26,69\"  : {x: MAP_SCALE * 135, y: MAP_SCALE * 170},\n  \"26,70\"  : {x: MAP_SCALE * 140, y: MAP_SCALE * 170},\n  \"26,74\"  : {x: MAP_SCALE * 145, y: MAP_SCALE * 170},\n  \"26,75\"  : {x: MAP_SCALE * 150, y: MAP_SCALE * 170},\n  \"26,87\"  : {x: MAP_SCALE * 155, y: MAP_SCALE * 170},\n  \"26,9\"   : {x: MAP_SCALE * 160, y: MAP_SCALE * 170},\n\n}\n\nvar BANK_TO_EXTERNAL_HUB = {\n  \"1\"  : \"0,9\"  , // Little Root\n  \"2\"  : \"0,10\" , // Oldale\n  \"3\"  : \"0,11\" , // Dewford\n  \"4\"  : \"0,12\" , // lavaridge\n  \"5\"  : \"0,13\" , // fallarbour\n  \"6\"  : \"0,14\" , // verdanturf\n  \"7\"  : \"0,15\" , // pacifidlog\n  \"8\"  : \"0,0\"  , // Petalburg\n  \"9\"  : \"0,1\"  , // Slateport\n  \"10\" : \"0,2\"  , // Mauville\n  \"11\" : \"0,3\"  , // Rustboro\n  \"12\" : \"0,4\"  , // Fortree\n  \"13\" : \"0,5\"  , // Lilycove\n  \"14\" : \"0,6\"  , // Mossdeep\n  \"15\" : \"0,7\"  , // Sootopolis\n  \"16\" : \"0,8\"  , // Evergrande\n  \"17\" : \"0,19\" , // r104\n  \"18\" : \"0,26\" , // r111\n  \"19\" : \"0,27\" , // r112\n  \"20\" : \"0,29\" , // r114\n  \"21\" : \"0,31\" , // r116\n  \"22\" : \"0,32\" , // r117\n  \"23\" : \"0,36\" , // r121\n  \"27\" : \"0,19\" , // r104\n  \"28\" : \"0,24\" , // r109\n  \"29\" : \"0,25\" , // r110\n  \"30\" : \"0,28\" , // r113\n  \"31\" : \"0,38\" , // r123\n  \"32\" : \"0,34\" , // r119\n  \"33\" : \"0,39\" , // r124\n}\n\nfunction nodeToPosition(node) {\n  \n  if (node.data().isWarp) {\n\n    let id = node.data().id;\n    let data = getMapData()[id];\n    let parent = mapBankToPosition(toMapBank(node.data().id), id.split(\",\")[3]);\n\n    if (!parent) {\n      return {'x':0, 'y':0};\n    }\n\n\n    let jointCoords = data.name.split(\"-\")[3].trim();\n\n    let isOutside = id.split(\",\")[1] == '0';\n    let scale = isOutside ? OUTSIDE_MAP_SCALE : INSIDE_MAP_SCALE;\n    if (!isOutside) {\n      node.addClass('indoors');\n    }\n\n    let x = parent.x + (scale * parseInt(jointCoords.split(\",\")[0], 16));\n    let y = parent.y + (scale * parseInt(jointCoords.split(\",\")[1], 16));\n\n    return {'x':x, 'y':y};\n\n  } \n\n  return {'x':0, 'y':0};\n}\n\nvar missingParentList = new Set();\n\nvar addedGroups = new Set();\nfunction mapBankToPosition(bank, nodeCount) {\n  \n  // Node is within a hub\n  let parentPosition = MAP_BANK_POSITION[bank.substring(2)]\n\n  if (parentPosition) {\n    return parentPosition;\n  } \n\n\n  // Node is a building withing a hub\n  let externalHub = BANK_TO_EXTERNAL_HUB[bank.split(\",\")[1]];\n\n  if (externalHub) {\n    parentPosition = MAP_BANK_POSITION[externalHub];\n    if (parentPosition) {\n      parentPosition.y = parentPosition.y - (20 * INSIDE_MAP_SCALE);\n      //parentPosition.x = parentPosition.x - (10 * nodeCount * INSIDE_MAP_SCALE)\n      return parentPosition;\n    } \n  }\n\n  missingParentList.add(bank);\n  return false;\n}"],"names":["mixedGameData","Object","entries","EMERALD_WARPS","forEach","e","remappingsData","isHeadless","warpList","Map","getMapData","getRandomisationAlgorithm","generateRandomMappings","getRandomisationConfig","config","hoennLevel","document","getElementById","value","getFlagData","FLAG_DATA","mappingToWarps","mappingData","mappedList","mapping","from","trigger","toParts","target","split","set","PKWarp","source","async","mapWarps","seed","flagsState","unaddedConditionalEdges","mapData","getFilteredData","flagData","apply","getAugmetedRemappingData","updateHashDisplay","storageManager","persist","WarpListData","rng","RNG","getHash","progressionState","initMappingGraph","ProgressionState","root","getInitialWarp","unconnectedComponents","filter","a","includes","moreWarpsToMap","doNextMapping","updateProgressionState","getBaseRemappingData","KEY_LOCATION_DATA","filterIgnored","k","ignore","filterByConfig","usabledWarps","w","filterLevel","kantoLevel","johtoLevel","get","level","filteGroupedNotMain","groupMain","grouped","toMapBank","s","arr","this","remainingConditionalEdges","Set","flags","unmarkedLocations","LOCATIONS_TRIGGER","unmarkedFlags","COMPOSITE_FLAGS","unmarkedKeyLocations","KEY_LOCATIONS","Array","exportMapping","find","then","data","JSON","stringify","file","File","type","saveAs","importMapping","files","reader","FileReader","readAsText","onload","readerEvent","content","result","warpListData","parse","updateWarpListData","M","FormSelect","getInstance","_handleSelectChangeBound","innerHTML","Math","abs","toString","toUpperCase","romCode","bank","map","warpNo","toRomCode","toBank","toMap","toWarpNo","input","hash","len","length","i1","charCodeAt","m","c","state","floor","random","ReigonNode","id","classes","AreaNode","node","isMap","parent","toReigon","label","name","trim","WarpNode","isWarp","isMapped","needsReturn","tags","noReturn","hasMultipleConnections","connections","values","n","FixedEdge","CondidtionalEdge","condition","WarpEdge","count","window","cy","remappingData","addTriggerData","addGroupedMappings","groupMappings","groups","g","push","to","edges","warpIdData","findAccessibleUnmappedNodes","cy1","nodeSet","elements","bfs","roots","directed","visit","v","u","depth","add","accessibleNodes","cachedNodes","inacessibleNodes","nodes","not","inaccesibleFlagLocations","has","inaccesibleKeyLocations","size","warp1","nextRange","delete","warp2","shouldCacheNodes","inacessibleHubs","degree","randomComponent","randomNodeIdFromComponent","selectRandomWarp","addClass","console","log","listOfWarps","connectingWarp","warpNeedsReturn","warpNoReturn","toast","html","displayLength","currentNodes","location","every","flag","conditionalEdges","cytoscape","container","headless","styleEnabled","boxSelectionEnabled","textureOnViewport","style","selector","css","shape","color","opacity","d","entry","components","toArray","group","p","remove","layout","nodeDimensionsIncludeLabels","positions","nodeToPosition","run","makeFinalLocationsKey","getHint","warp","info","prototype","finalLocations","HINTABLE_LOCATIONS","l","nextInt","nextFloat","start","end","rangeSize","randomUnder1","choice","array","ROXANNE","BRAWLY","WATTSON","FLANNERY","NORMAN","WINONA","JUAN","SIDNEY","PHOEBE","GLACIA","DRAKE","WALLACE","STEVEN","PATH_FINDING_LOCATIONS","CUT","FLASH","ROCKSMASH","STRENGTH","WATERFALL","HOHO","LUGIA","KYOGRE","GRAUDON","RAYQUAZA","PETALBURG","SLATEPORT","MAUVILLE","RUSTBORO","FORTREE","LILYCOVE","MOSSDEEP","SOOTOPOLIS","DEWFORD","LAVARIDGE","FALLARBOR","VERDANTURF","PACIFIDLOG","flagWeight","edge","difficulty","f","shortestPath","path","floydWarshall","weight","isNode","conditions","i","collapse","concat","requirements","join","MAP_SCALE","OUTSIDE_MAP_SCALE","INSIDE_MAP_SCALE","MAP_BANK_POSITION","x","y","BANK_TO_EXTERNAL_HUB","mapBankToPosition","jointCoords","isOutside","scale","parseInt","missingParentList","addedGroups","nodeCount","parentPosition","substring","externalHub"],"version":3,"file":"build-index.80c923ff.js.map"}